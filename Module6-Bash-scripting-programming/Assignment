Instructions
Advanced Bash: Owning the System
Congratulations! You've made it to the end of the Linux module.

Over the past few weeks, you've played the role of a systems administrator responsible for diagnosing, securing, and automating the hardening of a compromised Linux host. In doing so, you've explored all of the following, and more:

The structure of the Linux file system.
Processes and how to inspect them.
Creating users and groups and editing their permissions.
Scheduling regular jobs with cron.
Logging, monitoring, and log analysis.
Automating common tasks with bash scripts, compound commands, and other advanced features of the shell.
Getting this far is a real accomplishment. This is a huge amount of information, all of which is used by professional systems administrators almost every day.

IMPORTANT: Please review your answers carefully before submitting to ensure that they are free of spelling and spacing errors. Incorrect spelling or incorrect spacing syntax will be marked as incorrect answers.

Scenario
For this week's Challenge, you will play the role of a criminal hacker. You will remotely access a victim's target machine, maintain access using a backdoor, and crack sensitive passwords in the /etc directory.

You will learn a lot of new concepts in this assignment, and you may need to do a bit of research. This Challenge should be a fun, engaging, and hands-on introduction to maintaining access to a compromised system. (You will learn about this in more depth during the pen testing modules. For now, read the following Privilege Escalation to better understand the setup and goal of this assignment.

note
This activity is based on the "offense informs defense" philosophy. You will take on the role of a criminal hacker in order to better understand how exploits are carried out. Remember: to protect from attacks, you'll need to practice thinking like an attacker.

Privilege Escalation
When an attacker gains access to a machine, their first objective is always to escalate privileges to root (which you accomplished during your scavenger hunt activity). When they achieve root privileges, they can do anything they want to the system. Cybersecurity professionals describe the process of gaining access to a host and escalating to root privileges as owning the system.

While owning a system is a crucial piece of the process, it is only the first item on an experienced attacker's agenda. Two goals remain on the checklist: maintaining access and exfiltrating data.

After exploiting a machine, attackers must ensure that they will be able to reconnect later with the same escalated privileges they gained during the first assault. This is typically achieved by installing a backdoor. A backdoor is any mechanism that allows an attacker to secretly reconnect to a machine they've exploited.

Lab Environment
You will be completing this activity from your web lab, which represents the attacker machine.
You will be running a script to enable the target machine.
To start up the target machine, run the following command from anywhere inside your web lab:
sudo /home/sysadmin/Documents/scavenger-hunt/target-machine-start.sh
Access Setup
Complete the following steps:

Open up a new tab on your web lab

Begin an SSH session into the target machine by doing the following:

Open a terminal on the attacker machine and run: ssh sysadmin@192.168.6.105 -p 22.
This command will attempt to start an SSH session on your target machine.

Enter the password passw0rd when prompted.
After you've successfully logged into the sysadmin account on the target machine, you'll notice your prompt changes to sysadmin:~\ $.

Swap to the root user by entering sudo -s and reentering the password passw0rd.
You should now have the root prompt root:~\ $ that you acquired during your scavenger hunt activity.

Instructions
Your goal for this assignment is to maintain access to the target machine by installing a backdoor. You will then use the backdoor to crack sensitive passwords.

Complete this assignment by following the steps outlined below. Again, some of these steps will require you to research new tools and concepts. Any information you might need can be found using man pages and online searches. Remember: learning new tools on the job is a key skill for IT and security roles.

As you complete each step, make sure to take notes as you will use it to answer the questions in this quiz. 

Step 1: Shadow People
In this step, you'll create a "secret" user named sysd. Anyone examining /etc/passwd will assume that this is a service account, but in fact, you'll be using it to reconnect to the target machine for further exploitation.

Create a sysd user.

Give your user a password (make sure you remember it).

Give your user a system UID (any UID below 1000).

Give your user a GID equal to this UID.

Give your user full sudo access without a password.

Minimize exposure by ensuring that your secret user does not have a home folder.
Test that your sysd user can execute commands with sudo access without a password before moving on.

Try running sudo -l to test. If the terminal does not prompt you for a password, it was a success. Attempt any other commands that require elevated privileges and mark them in your Submission File.
note
If a hacker can rapidly execute commands on a machine with elevated privileges, they can more quickly exfiltrate important data from the target machine.

Step 2: Smooth Sailing
In this step, you'll allow SSH access via port 2222. SSH usually runs on port 22, but opening port 2222 will allow you to log in as your secret sysd user without connecting to the standard (and well-guarded) port 22.

Use Nano to update the /etc/ssh/sshd_config configuration file to allow SSH access via port 2222:

When you open the configuration file, add a secondary SSH port line under port 22.

This will require some research. Start by examining /etc/ssh/sshd_config and using online searches or man pages to learn more about the available configuration options.

Step 3: Testing Your Configuration Update
When you think you've configured things properly, test your solution by testing the new backdoor SSH port. Do the following steps on the target machine:

First, note that the IP address of the target machine is 192.168.6.105. You'll need this for when you attempt to log back into the target machine.

Make sure to restart the SSH service.
Exit the root account, and log off of the target machine (you'll know you're back in your attacker machine when the prompt turns green).

Use your attacking machine to test the new backdoor SSH port:

SSH back into the target machine as your sysd user, but this time change the port from 22 to 2222 using: ssh sysd@192.168.6.105 -p 2222
Once you are connected to the target machine over SSH, use sudo su to switch back to the root user.

note
This is an important step. You were able to log out of your root account, and then reestablish a remote session with escalated privileges through a different, un-guarded port.

Company servers that house sensitive information will often use monitoring and hardening tools to closely watch key ports, such as 22 for SSH.
It is also quite difficult for hackers, on their first breached connection, to know the locations of the most sensitive files in a system.
For this reason, hackers must both attempt to mask their activity (as you are doing with your sysd user), and also ensure that they can discreetly revisit a system. This allows them to maximize the amount of data they can take from the target machine.
Step 4: Crack All the Passwords
Next, to strengthen our control of this system, we will attempt to crack as many passwords as we can.

Having access to all the accounts will also allow us to access the system if our other backdoors are closed.

Make sure that you have SSH-ed into the target machine using your sysd account.

Escalate your privileges to the root user.

Use John to crack the entire /etc/shadow file.

You will not need to transfer the file, as John is already installed on the scavenger hunt VM.
note
Cracking passwords is a process that takes time. Now might be a good opportunity to take a break and let the computer do the work for you.


Question 1
15 / 15 pts
How do you create a secret user named 'sysd' without creating a home folder for this user?
  mkuser sysd 
  useradd sysd 
Correct, this creates a new user named 'sysd' without automatically creating a home directory for them.
  useradd -nohome sysd 
  adduser sysd -nohome 
 
Question 2
15 / 15 pts
What is the command to set or change the password for the secret user 'sysd'?
  mkpasswd sysd 
  newpass sysd 
  passwd sysd 
Correct, this allows you to set or change the password for the user 'sysd'.
  moduser sysd passwd 
 
Question 3
15 / 15 pts
How do you assign a system UID less than 1000 to your secret user 'sysd'?
  usermod sysd -uid 400 
  usermod -u 400 sysd 
Correct, this changes the user ID of 'sysd' to a specific system ID (400), which is below 1000
  moduser -ud 400 sysd 
  modusr -u 400 sysd 
 
Question 4
15 / 15 pts
What is the command to give your secret user 'sysd' a group ID (GID) that matches their user ID (UID)?
  modgroup -chg 400 sysd 
  grpmod sysd -g 400 
  groupmod -g 400 sysd 
Correct, this changes the group ID of the user 'sysd' to 400, matching the user ID set in the previous step.
  grpmod -chg 400 sysd 
 
Question 5
10 / 10 pts
What is the line you add to the sudoers file to allow the the secret user 'sysd' to sudo without requiring a password?
  sysd NOPASS=(ALL:ALL) 
  sysd ALL= NOPASS:ALL 
  sysd NOPASSWD:ALL 
  sysd ALL=(ALL:ALL) NOPASSWD:ALL 
Correct, this procedure allows 'sysd' to execute all commands as a superuser without being prompted for a password, by safely modifying the sudoers file using visudo and adding the specified line.
 
Question 6
10 / 10 pts
What is the full command you used to crack the passwords?
  john /etc/shadow 
Correct, john is used to crack the /etc/shadow file.
  johnr /shadow 
  john -showpass /shadow 
  john -crack /etc/shadow 
 
Question 7
20 / 20 pts
Match the passwords to their users.
stallman 
computer
babbage 
freedom
mitnick 
trustno1
lovelace 
lovelace
turing 
lakers

sysadmin@ip-10-0-1-132:~$ ssh sysd@192.168.6.105 -p 2222
sysd@192.168.6.105's password: 
Could not chdir to home directory /home/sysd: No such file or directory
$ whoami
sysd
$ sudo su


                                                                
root@042805c9c276:/# john /etc/shadow
Created directory: /root/.john
Loaded 8 password hashes with 8 different salts (crypt, generic crypt(3) [?/64])
Press 'q' or Ctrl-C to abort, almost any other key for status
1234             (sysd)
computer         (stallman)
freedom          (babbage)
trustno1         (mitnick)
dragon           (lovelace)
lakers           (turing)
passw0rd         (sysadmin)
Goodluck!        (student)
8g 0:00:06:13 100% 2/3 0.02141g/s 302.0p/s 309.7c/s 309.7C/s Missy!..Jupiter!
Use the "--show" option to display all of the cracked passwords reliably
Session completed
root@042805c9c276:/# 


